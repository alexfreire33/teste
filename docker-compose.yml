version: '3.8'

services:
  postgres:
    image: postgres:16
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: taxa
    ports:
      - "5433:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
      - ./scripts:/scripts
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d taxa"]
      interval: 10s
      timeout: 5s
      retries: 10
    entrypoint: ["/bin/bash", "-c", "exec docker-entrypoint.sh postgres"]

  db-setup:
    image: postgres:16
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./init-db:/docker-entrypoint-initdb.d
      - ./scripts:/scripts
    environment:
      PGHOST: postgres
      PGPORT: 5432
      PGUSER: postgres
      PGPASSWORD: postgres
      PGDATABASE: taxa
    command: ["/bin/bash", "-c", "/scripts/download_backup.sh && /scripts/restore_backup.sh"]

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: node-backend
    restart: always
    environment:
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: taxa
      DB_HOST: postgres
      DB_SCHEMA: inside
      DB_PORT: 5432
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - '3001:3001'  # API HTTP
      - '3002:3002'  # WebSocket

  survey-dashboard:
    build:
      context: ./survey-dashboard
      dockerfile: Dockerfile
    container_name: react-survey-dashboard
    restart: always
    ports:
      - '3000:3000'
    depends_on:
      - backend

volumes:
  pgdata:
